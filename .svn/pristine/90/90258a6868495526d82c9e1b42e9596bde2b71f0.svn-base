
  


components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    apiKeyAuth:
      type: apiKey
      in: header
      name: apikey
security:
 - basicAuth: []

tags:
  - name: Schedule
  - name: pg
    description: "pgsql 관련"
  - name: api
    description: "api 관련"
  - name: ora
    description: "orcla 관련"
  - name: loc
    description: "loc"

paths:

  /api/apiSchedule:
    get:
      summary: API Schedule
      descrpition: API Schedule
      tags: [Schedule]
      security:
        - basicAuth: []

      parameters:
        - name: carrierCode
          in: query
          description: LINE CODE
          type: string
          example: 'CMA'
          minLength: 3
          maxLength: 8
        - name: datafrom
          in: query
          type: date
          description: start date
          format: date
          example: '20200203'
          pattern: "YYYYMMDD"
          minLength: 8
          maxLength: 8
        - name: datato
          in: query
          type: date
          description: end date
          format: date
          example: '20200203'
          pattern: "YYYYMMDD"
          minLength: 8
          maxLength: 8  
      responses:
        "200":
          description: SUCCESS
          $ref: "#/definitions/getScheduleData"
        "401":
          description: UnauthorizedError
          $ref: "#/definitions/UnauthorizedError"
      default:
        description: Error           
                  



  /loc/getTestSimple:
    get:
      summary: test
      description: getTestSimple
      tags: [loc]
      security:
        - basicAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                  id:
                    type: integer  
        "401":
          description: UnauthorizedError
          $ref: "#/definitions/UnauthorizedError"
      default:
        description: Error

  /loc/getPort:
    post:
      security:
        - basicAuth: []
      summary: GET PORT INFOMATION
      description: Get domestic Port Information And location coordinates
      tags: [pg]
      
      requestBody:
          description: Optional description
          content:
            application/json:
              schema:
                $ref: "#/definitions/setPortCode"
      responses:
        "200":
            description: Success
            $ref: "#/definitions/portInfomation"
        "401":
            description: UnauthorizedError
            $ref: "#/definitions/UnauthorizedError"
        "404":
            description: badRequest
            $ref: "#/definitions/badRequestgetPort"    


      
      
      
        



  /loc/getPortLocation:
    post:
      summary: GET PORTCODE LOCATION
      tags: [pg]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/MultiportCode'
 
      responses:
        200:
          description: OK
        default:
          description: Error
 
  /loc/getTestQuerySample:
    get:
      summary: test
      tags: [pg]
      responses:
        200:
          description: OK
        default:
          description: Error

  /loc/getTestQueryParamSample:
    get:
      summary: test
      tags: [pg]
      parameteNrs:
        - name: line_code
          in: query
          description: Line
          type: string
        - name: ts_yn
          in: query
          description: TS
          type: list
      responses:
        200:
          description: OK
        default:
          description: Error


  /loc/getTestQueryAttibuteSample:
    post:
      summary: test
      tags: [pg]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/SimpleModels'
      responses:
        200:
          description: OK
        default:
          description: Error
          
  /com/getUserInfoSample:
    post:
      summary: test
      tags: [api]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/UserInfo'
              
      responses:
        200:
          description: OK
        default:
          description: Error

  /sch/getTestQueryAttibuteSample:
    post:
      summary: test
      tags: [ora]
      requestBody:
        content:
          application/json:
            schema:
              $ref: #/definitions/dpt_date
      responses:
        200:
          description: OK
        default:
          description: Error
    
  /sch/snkMasterList:
    post:
      summary: SNK GET BL LIST
      tags: [api]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/getBL'     
      responses:
        200:
          description: OK
        default:
          description: Error

  /sch/kmdMasterList:
    post:
      summary: KMD GET BL LIST
      tags: [api]
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/definitions/getBL'

            example:
              bl_no: SNKO02A181200512
              search_date: 20200205              
      responses:
        200:
          description: OK
        default:
          description: Error


  /sch/ymlMasterList:
    post:
      summary: YML GET BL LIST
      tags: [api]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/getBL'
      responses:
        200:
          description: OK
        default:
          description: Error




  /sch/getCarrierInfo:
    post:
      summary: Get Carrier
      tags: [api]
      responses:
        200:
          description: OK
        default:
          description: Error

  

  /sch/getScheduleList:
    post:
      summary: SchduleList
      tags: [api]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/Getschedule'
      responses:
        200:
          description: OK
        default:
          description: Error


  /sch/getPortCodeInfo:
    post:
      summary: Port Info
      tags: [api]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/SingleportCode'
      responses:
        200:
          description:
        default:
          description: Error
  
  /sch/getScheduleDetailList:
    post:
      summary: GET SCHEDULE DETAIL
      tags: [api]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/GetscheduleDetail'
      responses:
        200:
          description: OK
        default:
          description: Error
    
    /loc/getHotInfo:
      post:
        summary: Tracking Info
        tags: [pg]
        

  
  # /loc/test:
  #   post:
  #     summary: test
  #     tags: [loc]
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/definitions/setPort'
  #     responses:
  #       200:
  #         description: OK
  #       default:
  #         description: Error


          # complex objects have schema definitions
definitions:

  getBL:
    type: object
    required:
      - bl_no
    properties:
      bl_no:
        type: string
      search_date:
        type: string
  
  UserInfo:
    type: object
    properties:
      id:
        type: string
      pw:
        type: string

  SimpleModels:
    type: object
    properties:
      param1:
        type: string
      param2:
        type: string

  Getschedule:
    type: object
    properties:
      carrierCode:
        type: string
      startPort:
        type: string
      endPort:
        type: string
      startDate:
        type: string
        description: Start date
        format: date
        example: '20200203'
        pattern: "YYYYMMDD"
        minLength: 8
        maxLength: 8
      endDate:
        type: string
        description: End date
        format: date
        example: '20200203'
        pattern: "YYYYMMDD"
        minLength: 8
        maxLength: 8
      vesselName:
        type: string

  GetscheduleDetail:
    type: object
    properties:
      carrierCode:
        type: string
      vesselName:
        type: string
      voyage:
        type: string
      startPort:
        type: string
      endPort:
        type: string

  SingleportCode:
    type: object
    properties:
      portCode:
        type: string

  MultiportCode:
    type: object
    properties:
      portCode:
        type: array
        items:
          type: string
  setPort:
    properties:
      portId:
        type: string
        description: portId
      portName:
        type: string
        description: portName
      unlocode:
        type: string
        description: unlocode
      portAlias:
        type: string
        description: portAlias
      nationCode:
        type: string
        description: nationCode
      latitude:
        type: string
        description: latitude  
      longitude:
        type: string
        description: longitude  
      timezone:
        type: string
        description: timezone  
      geoData:
        type: string
        description: geoData  
      portShipType:
        type: string
        description: portShipType 
  
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      username:
        schema:
          type: string

        description: AuthUserId
      password:
        schema:
          type: string
        description: AuthPassword
  setPortCode:
    type: object
    properties:
      portCode:
        type: array
        items:
          type: string
        
  portInfomation:
    description: Success GetPort
    headers:
      port_code:
        schema:
          type: string
        description: PORT CODE
      port_name:
        schema:
          type: string
        description: PORT NAME
      port_kname:
        schema:
          type: string
        description: PORT KOREAN NAME
      wgs84_x:
        schema:
          type: float
        description: LONGITUDE
      wgs84_y:
        schema:
          type: float
        description: LATITUDE

  badRequestgetPort:
    description: Bad Request
    headers:
      portCode:
        schema:
          type: string
        description: PORT CODE
  
  getScheduleData:
    description: Success Request
    headers:
      line_code:
        schema:
          type: string
        description: CARRIER CODE

      vesssel_name:
        schema:
          type: string
        description: VESSEL NAME

      voyage_no:
        schema:
          type: string
        description: VOYAGE

      call_sign:
        schema:
          type: string
        description: CALL SIGN

      route_code:
        schema:
          type: string
        description: ROUTE CODE

      pol:
        schema:
          type: string
        description: POL

      eta:
        schema:
          type: string
        description: ETA

      etb:
        schema:
          type: string
        description: ETB

      etd:
        schema:
          type: string
        description: ETD

      calling_port:
        schema:
          type: string
        description: CALLING PORT

      calling_eta:
        schema:
          type: string
        description: CALLING ETA
        
      calling_etd:
        schema:
          type: string
        description: CALLING ETD
        